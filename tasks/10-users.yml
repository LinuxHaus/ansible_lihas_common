- name: "Check if to create user"
  ansible.builtin.debug:
    msg: "Will create {{ user.key }}"
  when: lihas_users_filter is not defined or ( lihas_users_filter is defined and user.key in lihas_users_filter )
  tags:
    - users
- name: "Check if to create user"
  ansible.builtin.debug:
    msg: "Will not create {{ user.key }}"
  when: lihas_users_filter is defined and user.key not in lihas_users_filter
  tags:
    - users
- name: Create/modify user
  ansible.builtin.user:
    name: "{{ user.key }}"
    uid: "{{ user.value.uid | default(omit) }}"
    group: "{{ user.value.group | default(omit) }}"
    shell: "{{ user.value.shell | default(omit) }}"
    comment: "{{ user.value.comment | default(omit) }}"
    home: "{{ user.value.home | default(omit) }}"
    create_home: "{{ user.value.create_home | default(true) }}"
    groups: "{{ user.value.groups | default(omit) }}"
    state: "{{ user.value.state | default('present') }}"
  when: lihas_users_filter is not defined or ( lihas_users_filter is defined and user.key in lihas_users_filter )
  tags:
    - users
  become: "{{ lihas_become }}"
- name: "Home directory permissions in case we had previous content there"
  ansible.builtin.file:
    path: "{{ user.value.home | default('/home/' + user.key) }}"
    state: directory
    owner: "{{ user.key }}"
    recurse: true
  when: ( lihas_users_filter is not defined or ( lihas_users_filter is defined and user.key in lihas_users_filter ) ) and user.value.force_home_user | default(false)
  when: user.value.force_home_user | default(false)
  tags:
    - users
  become: "{{ lihas_become }}"
- name: "Add ssh key"
  ansible.posix.authorized_key:
    key: "{{ sshkey }}"
    manage_dir: true
    user: "{{ user.key }}"
    path: "{{ user.value.home | default('/home/' + user.key) + '/.ssh/authorized_keys' }}"
  loop: "{{ user.value.ssh_authorized_keys | default([]) }}"
  loop_control:
    loop_var: sshkey
  when: lihas_users_filter is not defined or ( lihas_users_filter is defined and user.key in lihas_users_filter )
  tags:
    - users
  become: "{{ lihas_become }}"
- name: "Add sudo"
  ansible.builtin.template:
    dest: "/etc/sudoers.d/{{ user.key }}"
    mode: "0440"
    owner: root
    group: root
    validate: 'visudo -cf %s'
    src: "etc/sudoers.d/sudo.j2"
  tags:
    - users
  become: "{{ lihas_become }}"
  when: ( lihas_users_filter is not defined or ( lihas_users_filter is defined and user.key in lihas_users_filter ) ) and ( user.value.sudo | default(false) or user.value.sudo_selfservice | default(false) )
...
